---
# --------------------------------

seg_rules:
  alertmanager:
  - {direction: ingress, ports: {from: 9093, to: 9093}, protocol: "tcp", ipv4_cidrs: ["LOCAL"], description: "Alertmanager"}
  bastion:
  - {direction: ingress, ports: {from: 22, to: 22}, protocol: "tcp", var4: "var.ipv4_admin_hosts", description: "Admin SSH connections"}
  common:
  - {direction: ingress, ports: {from: 7444, to: 7499}, protocol: "tcp", ipv4_cidrs: ["LOCAL"], description: "Consul Connect"}
  - {direction: ingress, ports: {from: -1, to: -1}, protocol: "icmp", ipv4_cidrs: ["LOCAL"], description: "Intra VPC pings"}
  consul:
  - {direction: ingress, ports: {from: 8300, to: 8302}, protocol: "tcp", ipv4_cidrs: ["LOCAL"], description: "Consul TCP traffic"}
  - {direction: ingress, ports: {from: 8300, to: 8302}, protocol: "udp", ipv4_cidrs: ["LOCAL"], description: "Consul UDP traffic"}
  - {direction: ingress, ports: {from: 8400, to: 8400}, protocol: "tcp", ipv4_cidrs: ["LOCAL"], description: "Consul TCP traffic"}
  - {direction: ingress, ports: {from: 8500, to: 8502}, protocol: "tcp", ipv4_cidrs: ["LOCAL"], description: "Consul TCP traffic"}
  - {direction: ingress, ports: {from: 8600, to: 8600}, protocol: "tcp", ipv4_cidrs: ["LOCAL"], description: "Consul TCP traffic"}
  - {direction: ingress, ports: {from: 8600, to: 8600}, protocol: "udp", ipv4_cidrs: ["LOCAL"], description: "Consul UDP traffic"}
  - {direction: ingress, ports: {from: 20000, to: 21255}, protocol: "tcp", ipv4_cidrs: ["LOCAL"], description: "Consul Sidecar TCP"}
  - {direction: ingress, ports: {from: 20000, to: 21255}, protocol: "udp", ipv4_cidrs: ["LOCAL"], description: "Consul Sidecar UDP"}
  consulServer:
  - {direction: ingress, ports: {from: 8500, to: 8502}, protocol: "tcp", var4: "var.ipv4_trusted_hosts", description: "Consul external TCP traffic"}
  grafanaServer:
  - {direction: ingress, ports: {from: 3000, to: 3000}, protocol: "tcp", var4: "var.ipv4_trusted_hosts", description: "Grafana traffic from outside"}
  - {direction: ingress, ports: {from: 3000, to: 3000}, protocol: "tcp", ipv4_cidrs: ["LOCAL"], description: "Local Grafana requests"}
  influxdb:
  - {direction: ingress, ports: {from: 8086, to: 8086}, protocol: "tcp", ipv4_cidrs: ["LOCAL"], description: "Allow traffic to InfluxDb server"}
  internal:
  - {direction: ingress, ports: {from: 0, to: 0}, protocol: "-1", ipv4_cidrs: ["LOCAL"], description: "Allow all internal ingress"}
  - {direction: egress, ports: {from: 0, to: 0}, protocol: "-1", ipv4_cidrs: ["LOCAL"], description: "Allow all internal egress"}
  nomad:
  - {direction: ingress, ports: {from: 4646, to: 4648}, protocol: "tcp", ipv4_cidrs: ["LOCAL"], description: "Nomad TCP traffic"}
  - {direction: ingress, ports: {from: 4646, to: 4648}, protocol: "udp", ipv4_cidrs: ["LOCAL"], description: "Nomad UDP traffic"}
  outboundAnywhere:
  - {direction: egress, ports: {from: 0, to: 0}, protocol: "-1", ipv4_cidrs: ["ANYWHERE"], ipv6_cidrs: ["ANYWHERE"], description: "Allow all traffic to the Internet"}
  postgres:
  - {direction: ingress, ports: {from: 5432, to: 5432}, protocol: "tcp", ipv4_cidrs: ["LOCAL"], description: "PostgreSQL connections"}
  pritunl:
  - {direction: ingress, ports: {from: 80, to: 80}, protocol: "tcp", ipv4_cidrs: ["ANYWHERE"], description: "Allow HTTP from anywhere but only when running Certbot"}
  - {direction: ingress, ports: {from: 443, to: 443}, protocol: "tcp", ipv4_cidrs: ["ANYWHERE"], description: "Allow HTTPS from anywhere"}
  - {direction: ingress, ports: {from: 13000, to: 16000}, protocol: "udp", ipv4_cidrs: ["ANYWHERE"], description: "Miscellaneous VPN ports"}
  - {direction: ingress, ports: {from: 51820, to: 51830}, protocol: "udp", ipv4_cidrs: ["ANYWHERE"], description: "Wireguard ports"}
  prometheus:
  - {direction: ingress, ports: {from: 9090, to: 9090}, protocol: "tcp", ipv4_cidrs: ["LOCAL"], description: "Prometheus connections"}
  questdb:
  - {direction: ingress, ports: {from: 8812, to: 8812}, protocol: "tcp", ipv4_cidrs: ["LOCAL"], description: "QuestDb PostgreSQL"}
  - {direction: ingress, ports: {from: 9000, to: 9000}, protocol: "tcp", ipv4_cidrs: ["LOCAL"], description: "QuestDb Web and RestAPI"}
  - {direction: ingress, ports: {from: 9003, to: 9003}, protocol: "tcp", ipv4_cidrs: ["LOCAL"], description: "QuestDb Health"}
  - {direction: ingress, ports: {from: 9009, to: 9009}, protocol: "tcp", ipv4_cidrs: ["LOCAL"], description: "QuestDb InfluxDb"}
  svc:
  - {direction: ingress, ports: {from: 8001, to: 8099}, protocol: "tcp", ipv4_cidrs: ["LOCAL"], description: "Internal web traffic"}
  twingate:
  - {direction: egress, ports: {from: 22, to: 22}, protocol: "tcp", ipv4_cidrs: ["LOCAL"], description: "Twingate local SSH"}
  - {direction: egress, ports: {from: 443, to: 443}, protocol: "tcp", ipv4_cidrs: ["ANYWHERE"], description: "Twingate egress https"}
  - {direction: egress, ports: {from: 4646, to: 4646}, protocol: "tcp", ipv4_cidrs: ["LOCAL"], description: "Twingate Nomad"}
  - {direction: egress, ports: {from: 7444, to: 7444}, protocol: "tcp", ipv4_cidrs: ["LOCAL"], description: "Twingate local webserver"}
  - {direction: egress, ports: {from: 8500, to: 8500}, protocol: "tcp", ipv4_cidrs: ["LOCAL"], description: "Twingate Consul"}
  - {direction: egress, ports: {from: 30000, to: 31000}, protocol: "tcp", ipv4_cidrs: ["ANYWHERE"], description: "Twingate egress transient ports"}
  vault:
  - {direction: ingress, ports: {from: 8200, to: 8203}, protocol: "tcp", ipv4_cidrs: ["LOCAL"], description: "Vault TCP traffic"}
  - {direction: ingress, ports: {from: 8200, to: 8203}, protocol: "udp", ipv4_cidrs: ["LOCAL"], description: "Vault UDP traffic"}
  webPrivate:
  - {direction: ingress, ports: {from: 80, to: 80}, protocol: "tcp", var4: "var.ipv4_trusted_hosts", description: "Allow HTTP from trusted addresses"}
  - {direction: ingress, ports: {from: 443, to: 443}, protocol: "tcp", var4: "var.ipv4_trusted_hosts", description: "Allow HTTPS from trusted addresses"}
  - {direction: ingress, ports: {from: 443, to: 443}, protocol: "tcp", ipv4_cidrs: ["LOCAL"], description: "Local HTTPS"}
  webPublic:
  - {direction: ingress, ports: {from: 80, to: 80}, protocol: "tcp", ipv4_cidrs: ["ANYWHERE"], ipv6_cidrs: ["ANYWHERE"], description: "Allow HTTP"}
  - {direction: ingress, ports: {from: 443, to: 443}, protocol: "tcp", ipv4_cidrs: ["ANYWHERE"], ipv6_cidrs: ["ANYWHERE"], description: "Allow HTTPS"}

# --------------------------------
...
